# Do not run this test when running memory leak testing
# because otherwise it would time out.
# See the thread "parallel/cobegin/diten/cobeginRace regression"
# on the internal list - below is a summary.
#
# Why does it time out?
#  * Memory leak testing currently runs on a virtual server, with qthreads.
#  * This test creates lots of tasks; at most 12 tasks are created at once.
#  * It runs a lot faster with guard pages disabled.
#  * So we conjecture that guard pages are very slow on that machine.
#
# Can this test be made to succeed in this context? Yes, e.g.:
#  * turn off guard pages
#  * increase the timeout
#  * reduce the number of iterations
# Re the last two... In 2008 this test ran quickly on computers that
# were old back then - see commit 5bd5df6. So we want to keep the current
# size and timeout in our other contexts.
#
# Note also that this test currently does not generate memleaks info.
# That's because it calls exit() (from ChapelBase.chpl), and that bypasses
# the memleaks dump. And even if it didn't, we currently not do
# any structured teardown upon exit(). So the memleaks report would be
# very long, and not very useful.
#
CHPL_MEM_LEAK_TESTING == true
